<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>LetChat</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" 
    integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">  
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" 
    integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" />
  <style>
    .chatbox {
      outline: 1px solid silver;
      min-height: 160px;
      padding: 0.5em;
    }
   </style>
</head>
<body>
<div class="container">
  <div class="row">
    <div class="col">
      <h1 class="mt-3">This is the home page</h1>
      <hr>
      <div class="row">
        <div class="col-md-8">
          <h3>Chat</h3>

          <div class="form-group">
            <label for="username">Username</label>
            <input type="text" name="username" id="username" class="form-control" autocomplete="off"> 
          </div>
            <div class="form-group">
            <label for="message">Message</label>
            <input type="text" name="message" id="message" class="form-control" autocomplete="off"> 
          </div>
          <hr>

          <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Msg</a>

          <input type="hidden" name="action" id="action">
          
          <div id="status" class="mt-2 float-end">
            
          </div>

          <div></div>

          <div id="output" class="chatbox mt-3">

          </div>
        </div>
        <div class="col-md-4">
          <h3>Who's with me</h3>
          <ul id="online_users">
            
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" 
  integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" 
  integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous"></script>
<script src="/static/reconnecting-websocket.min.js"></script>
<script>
  let socket = null;
  let o = document.getElementById("output")
  let userField = document.getElementById("username")
  let messageField = document.getElementById("message")

  window.onbeforeunload = function() {
     console.log("Leaving");
     let jsonData = {};
     jsonData["action"] = "left";
     socket.send(JSON.stringify(jsonData));
  }

  document.addEventListener("DOMContentLoaded", function(){
      socket = new ReconnectingWebSocket("ws://dpapu.xyz:9090/ws", null, {debug: true, reconnectInterval: 3000});

        const offline = `<span class="badge bg-danger">Not connected</span>`
        const online = `<span class="badge bg-success">Connected</span>`
        let statusDiv = document.getElementById("status");

      socket.onopen = () => {
        console.log("Connected successfully!");
	    statusDiv.innerHTML = online;
      }

      socket.onclose = () => {
        console.log("Connection closed!");
	    statusDiv.innerHTML = offline;
      }

      socket.onerror = error => {
        console.log("error happened");
	    statusDiv.innerHTML = offline;
      }

      socket.onmessage = msg => {
       // console.log(msg);
       // let j = JSON.parse(msg.data);
       // console.log(j);

       let data = JSON.parse(msg.data);
       console.log("Action is", data.action);

       switch (data.action) {
         case "list_users":
           let ul = document.getElementById("online_users");
           while (ul.firstChild) ul.removeChild(ul.firstChild);

           if (data.connected_users.length > 0 ) {
             data.connected_users.forEach(function(item){
               let li = document.createElement("li");
               li.appendChild(document.createTextNode(item));
               ul.appendChild(li);
             })
           }
           break;

         case "broadcast":
           o.innerHTML = o.innerHTML + data.message + "<br>";
           break;
       }

      }

      userField.addEventListener("change", function() {
        let jsonData = {};
        jsonData["action"] = "username";
        jsonData["username"] = this.value;
        socket.send(JSON.stringify(jsonData));
      })

      messageField.addEventListener("keydown", function(event) {
        if (event.code === "Enter") {
          if (!socket) {
            console.log("no connection");
            return false
          }

          if ((userField.value === "") || (messageField.value === "")) {
           errorMessage("Fill out both username and message");
           return false
         } else {
             sendMessage()
         }
          event.preventDefault();
          event.stopPropagation();
        }
      })

      document.getElementById("sendBtn").addEventListener("click", function() {
         if ((userField.value === "") || (messageField.value === "")) {
           errorMessage("Fill out both username and message");
           return false
         } else {
             sendMessage()
         }
      })
  })

  function sendMessage() {
    let jsonData = {};
    jsonData["action"] = "broadcast";
    jsonData["username"] = userField.value;
    jsonData["message"] = messageField.value;
    socket.send(JSON.stringify(jsonData))
    messageField.value = "";
  }

  function errorMessage(msg) {
        notie.alert({
            type: 'error',
            text: msg,
        })
  }
</script>
</html>
